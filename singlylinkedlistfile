#include<iostream>
using namespace std;
class node
{
public:
int data;
node* next;
public:
node(int val)
{
 data=val;
 next=NULL;
}
};
void insertathead(node* &head,int val)
{
    //new_node 
    node* new_node=new node(val);
    new_node->next=head;
    head=new_node;
}
void insertatend(node* head,int val)
{
    node* new_node=new node(val);
    node* temp=head;
    while(temp->next!=NULL)
    {
      temp=temp->next;
    }
    temp->next=new_node;
}
void insertatposition(node* &head,int val,int pos)
{
    if(pos==0)
    {
        insertathead(head,val);
        return;
    }
    node* new_node=new node(val);
    node* temp=head;
   int curr=0;
    while(curr!=pos-1)
    {
      temp=temp->next;
      curr++;
    }
    //now temp is pointing to the pos-1
    new_node->next=temp->next;
    temp->next=new_node;

}
void updateatposition(node* &head,int val,int pos)
{
    node* temp=head;
    int curr=0;

    while(curr!=pos-1)
    {
        temp=temp->next;
        curr++;
    }
    temp->data=val;
}
void deleteatstart(node* &head)
{
    node* temp=head;//node to be deleted
    head=head->next;
    free(temp);
}
void deleteatend(node* head)
{
    node* temp=head;
    while(temp->next->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=NULL;

}
void deleteatposition(node* &head,int pos)
{
    if(pos==0)
    {
        deleteatstart(head);
        return;
    }
    node* temp=head;
    int curr=0;
    while(curr!=pos-1)
    {
        temp=temp->next;
        curr++;
    }
    temp->next=temp->next->next;



}
void traverse(node* &head)
{
    node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"-->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}
int main()
{
    node* head=NULL;
    insertathead(head,10);
    traverse(head);
    insertatend(head,20);
    traverse(head);
    insertatposition(head,30,1);
    traverse(head);
    updateatposition(head,40,2);
    traverse(head);
    deleteatstart(head);
    traverse(head);
    deleteatend(head);
    traverse(head);
     insertatend(head,50);
    traverse(head);
    deleteatposition(head,1);
    traverse(head);
    return 0;
    
}
